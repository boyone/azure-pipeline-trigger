resources:
  pipelines:
    - pipeline: trigger-pipeline # Name of the pipeline resource.
      source: boyone.first-pipeline-trigger # The name of the pipeline referenced by this pipeline resource.
      trigger: true

trigger:
  branches:
    exclude:
      - main

# variables:
#   - group: FOO

steps:
  - script: |
      echo 'second pipeline'
      echo '$(Build.Repository.ID)'
      commitID=$(git rev-parse --short HEAD)
      echo $commitID
    displayName: Docker restore

  - script: |
      echo 'Build Number: $(Build.BuildNumber)'
    displayName: Echo Group Variables

  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'specific'
      project: '673d6d0d-f908-4430-bf35-c2a89780097d'
      pipeline: '6'
      buildVersionToDownload: 'latest'
      downloadType: 'specific'
      itemPattern: 'build/**'
      downloadPath: '$(System.DefaultWorkingDirectory)'

  - script: |
      if [[ -f "$(System.DefaultWorkingDirectory)/build/buildVersion1" ]]
      then
          echo "got buildVersion1"
      fi
    displayName: Check existed file1

  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'specific'
      project: '673d6d0d-f908-4430-bf35-c2a89780097d'
      pipeline: '6'
      buildVersionToDownload: 'latest'
      downloadType: 'specific'
      itemPattern: 'buildxxx/**'
      downloadPath: '$(System.DefaultWorkingDirectory)'

  - script: |
      if [[ -f "$(System.DefaultWorkingDirectory)/buildxxx/buildVersion1" ]]
      then
          echo "got buildVersion1"
      fi
    displayName: Check existed file2

  # - task: DownloadBuildArtifacts@1
  #   inputs:
  #     buildType: 'current'
  #     downloadType: 'single'
  #     artifactName: 'build'
  #     downloadPath: '$(System.DefaultWorkingDirectory)'

  - script: |
      ls -al build/
      cat build/buildVersion1
      cat build/buildVersion2
    displayName: Echo Build Version
